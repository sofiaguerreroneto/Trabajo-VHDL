library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity Emergencia is
   Port (
        alarm1: in std_logic;
        start: in std_logic;
        clk: in std_logic;
        alarma: out std_logic_vector(13 downto 0);
        alarma_ME : out std_logic
   );
end Emergencia;
architecture Behavioral of Emergencia is
signal aux_al : std_logic := '0'; -- Señal usada para llevar el control del tiempo del contador para realizar el parpadeo.
signal al : integer range 0 to 50000000:=0; -- Señal usada para llevar el control del tiempo del contador para realizar el parpadeo.
signal a : std_logic := '0'; -- Señal usada para almacenar el valor de alarma.
begin
Emergencia : PROCESS(clk) -- En el 'process' se va a leer el 'clk'
    begin
        if clk='1' and clk'event then
            if(alarm1 = '1') then -- Si el botón de alarma está activo (se ha pulsado)
              alarma_ME <= '1'; -- La salida se coloca a 1
              a <= '1'; -- Se le asigna 1 a la señal 'a' 
           end if;
            if(alarm1 = '0' and start = '1') then -- Si la alarma se encuentra a 0 (no se ha dado o se ha desactivado Y se ha pulsado 'start'
                alarma_ME <= '0'; -- La salida se coloca a 0
                a <= '0'; -- Se le asigna 0 a la señal 'a' 
            end if;  
        -- La señal 'a' es una bandera que almacena el estado de la alarma (bajo o alto según esté activada o no)
           
            
             if(a='1') then -- Si la alarma se pulsa
             -- Código para que los leds asociados a la alarma parpadeen cuando se active la alarma
                 if(aux_al = '0') then -- Si la señal 'aux_al' está a 0
                    if(al>=0 and al<5000000) then --Toma dos pulsos, porque uno es debido a la actualizacion del valor.
                        al<=al+1; -- Se incrementa en 1 el valor de la señal de 'al'
                         for I in 0 to 13 loop -- De 0 a 13 hace un bucle    
                         alarma(I) <= '1';
                         end loop;                   
                    end if; 
                    if(al=5000000) then -- Si tiene un valor muy alto
                        al<=0; -- pasa a ser 0 
                        aux_al<='1'; -- y el auxiliar, que es el que lleva el control del tiempo para realizar el parpadeo, pasa a nivel alto
                    end if;
                 end if;
                 
                if(aux_al='1') then -- Si el auxiliar ha pasado a 1 (como antes)
                    if(al>=0 and al<5000000) then 
                        al <= al+1; 
                         for I in 0 to 13 loop     
                         alarma(I) <= '0';
                         end loop;                    
                    end if; -- De nuevo se realiza el bucle, esta vez si 'al' está a nivel alto
                    if(al=5000000) then
                        al<=0; 
                        aux_al<='0';    
                    end if;
                end if;
             else 
                for I in 0 to 13 loop     
                alarma(I) <= '0';
                end loop;              
            end if;
         
         end if; 
end process;

end Behavioral;
